version: '3.5'

services:
  # DATABASE
  mysql:
    container_name: mysql
    platform: linux/x86_64
    image: mysql:$DB_VERSION
    env_file:
      - .env
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - $DB_PORT:$DB_PORT
    environment:
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=$DB_PASSWORD
      #- MYSQL_USER=$DB_USER
      - MYSQL_PASSWORD=$DB_PASSWORD
    networks:
      - neoway

  # RABBITMQ
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: always
    ports:
      - 5671:5671
      - 5672:5672
      - 4369:4369
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_NODE_IP_ADDRESS=0.0.0.0
    networks:
      - neoway

  # FILE-TEXT-EXTRACTOR
  file_text_extractor:
    build:
      context: file-text-extractor/.
    container_name: file-text-extractor
    restart: always
    environment:
      WAIT_HOSTS: rabbitmq:15672, mysql:3306
    env_file:
      - .env
    volumes:
      - ./${SHARED_STORAGE}:/home/node/neoway/file-text-extractor/storage
    networks:
      - neoway

  # API
  api:
    build:
      context: api/.
    container_name: API
    restart: always
    environment:
      WAIT_HOSTS: rabbitmq:15672, mysql:3306
    env_file:
      - .env
    ports:
      - $API_PORT:3000
    volumes:
      - ./${SHARED_STORAGE}:/home/node/neoway/api/storage
    networks:
      - neoway

  # WEB
  web:
    build:
      context: web/.
    container_name: web
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - neoway

networks:
  neoway:
    driver: 'bridge'
